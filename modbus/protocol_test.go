package modbus

import (
	. "gopkg.in/check.v1"
	"testing"
	"time"
)

func TestProtocol(t *testing.T) {
	TestingT(t)
}

type ProtocolTestSuite struct{}

var _ = Suite(&ProtocolTestSuite{})

var (
	faultPacket     = []byte{0x68, 0x38, 0x38, 0x68, 0x83, 0x20, 0x21, 0x06, 0x17, 0x10, 0x55, 0x2A, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1A, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x07, 0x00, 0x2D, 0x04, 0x40, 0xB4, 0x08, 0x08, 0x40, 0x00, 0x00, 0x0B, 0x40, 0x18, 0x00, 0x11, 0x40, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x1A, 0x40, 0x19, 0x00, 0x1D, 0x40, 0x18, 0x00, 0xFD, 0x16}
	heartBeatPacket = []byte{0x68, 0x16, 0x16, 0x68, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8D, 0x11, 0x12, 0x22, 0x33, 0x31, 0x11, 0x07, 0x21, 0x10, 0x32, 0x00, 0x44, 0x01, 0x00, 0x76, 0x16}
)

func (s *ProtocolTestSuite) TestNewFault(c *C) {
	f, err := NewFrame(faultPacket)
	if err != nil {
		c.Fatal(err)
	}
	fault, err := f.NewFault()
	if err != nil {
		c.Fatal(err)
	}
	c.Assert(fault.TelemeteringNum, Equals, byte(1))
	c.Assert(fault.TeleindicationData[0].TeleindicationDit, Equals, [2]byte{0x04, 0x40})
	c.Assert(fault.TelemeteringTimeMark.Time(), Equals, time.Date(0, 1, 1, 0, 0, 0, 0, time.Local))
	c.Log(fault)
}

func (s *ProtocolTestSuite) TestNewHeartBeat(c *C) {

	f, err := NewFrame(heartBeatPacket)
	if err != nil {
		c.Fatal(err)
	}

	heartBeat, err := f.NewHeartBeat()
	if err != nil {
		c.Fatal(err)
	}

	c.Assert(heartBeat.ID.String(), Equals, "111222333111")
	c.Assert(heartBeat.NodeIDs[0].String(), Equals, "72110320044")
}
